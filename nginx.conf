user apache apache;
worker_processes  8;
#worker_processes  1;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    large_client_header_buffers 40 4k;
    access_log  /var/log/nginx/access.log;
        client_max_body_size 20M;
        client_body_buffer_size 128k;
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        fastcgi_send_timeout 600s;
        fastcgi_read_timeout 600s;




 keepalive_timeout   30 30;
    send_timeout        60;
    tcp_nodelay        on;

    gzip  on;
    # NEW STUFF
    ignore_invalid_headers  on;
    #include                 /etc/mime.types;
    keepalive_requests      20;
    source_charset      utf-8;
    recursive_error_pages   on;
    sendfile                on;
    server_tokens           off;
    # END NEW STUFF



server {
  listen       80 default;
  root /opt/web;
  index  index.php;

  charset utf-8;
    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 403;
    }
    if ($request_method ~ ^(GET|POST)$ ) {
      rewrite http://* /BAD/ break;
    }

  location / {
    # If the file exists as a static file serve it directly without
    # running all the other rewite tests on it
    index index.php index.html index.htm;
    if (-f $request_filename) {
      expires max; 
   break; 
    }

    if ($request_filename !~ "\.(js|htc|ico|gif|jpg|png|css)$") {
      rewrite ^(.*) /index.php last;
    }
  }

  location ~ \.php($|/) {
    set  $script     $uri;
    set  $path_info  "";

    if ($uri ~ "^(.+\.php)(/.+)") {
      set  $script     $1;
      set  $path_info  $2;
    }

    #fastcgi_pass   127.0.0.1:9000;
#       fastcgi_pass unix:/var/run/php-fastcgi.socket;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    include /etc/nginx/fastcgi_params;

    fastcgi_param  SCRIPT_FILENAME  /opt/web$script;
    fastcgi_param  PATH_INFO        $path_info;
  }
}
}

